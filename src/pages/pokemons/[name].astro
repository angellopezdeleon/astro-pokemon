---
import MainLayout from "@layouts/MainLayout.astro";
import PokemonCard from "@components/pokemons/PokemonCard.astro";

import { Icon } from "astro-icon/components";

import type { PokemonListResponse } from "@interfaces/pokemon-list.response";
import type { GetStaticPaths } from "astro";
import Title from "@components/shared/Title.astro";
export const getStaticPaths = (async () => {
  const resp = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
  const { results } = (await resp.json()) as PokemonListResponse;

  return results.map(({ name, url }) => ({
    params: { name },
    props: { name, url },
  }));
}) satisfies GetStaticPaths;

const { name, url } = Astro.props;
const id = url.split("/").slice(-2)[0]; // Extracting the ID from the URL
// Obtener detalles del Pokémon
const resp = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);
const pokemonDetail = await resp.json();
const audioSrc =
  pokemonDetail.cries?.latest || pokemonDetail.cries?.legacy || "";
const imageSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;
---

<MainLayout
  title={`Pokemon - #${id} ${name}`}
  description={`Detalles del Pokémon ${name} con ID ${id}. Escucha su sonido característico.`}
  image={imageSrc}
>
  <section class="mt-10 mx-10 flex flex-col justify-center items-center">
    <div class="flex flex-row">
      <div>
        <button onclick="history.back()" class="text-blue-500 mb-2.5"
          >Regresar</button
        >
        <Title>{name}</Title>
      </div>

      <button
        class="ml-5 text-red-500 hover:text-red-700"
        id="btn-favorite"
        data-name={name}
        data-id={id}
      >
        <Icon name={`heart-${true ? "full" : "outline"}`} size={50} />
      </button>
    </div>

    <PokemonCard name={name} url={url} isBig={true} />
    <audio controls class="mt-5">
      <source src={audioSrc} type="audio/ogg" />
    </audio>
  </section>
</MainLayout>

<script>
  interface FavoritePokemon {
    id: string;
    name: string;
  }

  document.addEventListener("astro:page-load", () => {
    const btnFavorite = document.getElementById(
      "btn-favorite"
    ) as HTMLButtonElement;
    const name = btnFavorite.dataset.name as string;
    const id = btnFavorite.dataset.id as string;

    btnFavorite.addEventListener("click", () => {
      console.log("Favorite button for:", name, id);
    });
  });
</script>

<style>
  #btn-favorite {
    @reference hover:animate-pulse;
  }
</style>
